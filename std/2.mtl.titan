class MonadState s m | m ~> s where Monad m {
  val get : m s
  val put : s -> m {}
}

val modify : (s -> s) -> m {} where MonadState s m = fun f ->
  bind get (fun s -> put (f s))

val gets : (s -> a) -> m a where MonadState s m = fun f ->
  bind get (fun s -> return (f s))

class MonadReader r m | m ~> r where Monad m {
  val ask : m r
  val local : (r -> r) -> m a -> m a
}

val asks : (r -> a) -> m a where MonadReader r m = fun f ->
  bind ask (fun r -> return (f r))

class MonadWriter w m | m ~> w where (Monoid w, Monad m) {
  val tell : w -> m {}
}

data StateT s m a {
  con StateT (s -> m (a, s))
}

val runStateT : StateT s m a -> s -> m (a, s) where Monad m = fun (StateT f) -> f
val evalStateT : StateT s m a -> s -> m a where Monad m = fun f s -> fmap fst (runStateT f s)
val execStateT : StateT s m a -> s -> m s where Monad m = fun f s -> fmap snd (runStateT f s)

data ReaderT r m a {
  con ReaderT (r -> m a)
}

val runReaderT : ReaderT r m a -> r -> m a where Monad m = fun (ReaderT f) -> f

data WriterT w m a {
  con WriterT (m (a, w))
}

val runWriterT : WriterT w m a -> m (a, w) where Monad m = fun (WriterT m) -> m
val execWriterT : WriterT w m a -> m w where Monad m = fun f -> fmap snd (runWriterT f)

instance Functor (StateT s m) where Functor m
instance Functor (ReaderT r m) where Functor m
instance Functor (WriterT w m) where Functor m

instance Applicative (StateT s m) where Monad m
instance Applicative (ReaderT r m) where Applicative m
instance Applicative (WriterT w m) where (Applicative m, Monoid w)

instance Monad (StateT s m) where Monad m
instance Monad (ReaderT r m) where Monad m
instance Monad (WriterT w m) where (Monad m, Monoid w)

instance MonadState s (StateT s m) where Monad m
instance MonadState s (ReaderT r m) where MonadState s m
instance MonadState s (WriterT w m) where (MonadState s m, Monoid w)

instance MonadReader r (StateT s m) where MonadReader r m
instance MonadReader r (ReaderT r m) where Monad m
instance MonadReader r (WriterT w m) where (MonadReader r m, Monoid w)

instance MonadWriter w (StateT s m) where MonadWriter w m
instance MonadWriter w (ReaderT r m) where MonadWriter w m
instance MonadWriter w (WriterT w m) where (Monad m, Monoid w)
